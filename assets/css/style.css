.active-background, .active-background .fade {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
}

@font-face {
  font-family: system;
  font-style: normal;
  font-weight: 300;
  src: local(".SFNSText-Light"), local(".HelveticaNeueDeskInterface-Light"), local(".LucidaGrandeUI"), local("Ubuntu Light"), local("Segoe UI Light"), local("Roboto-Light"), local("DroidSans"), local("Tahoma");
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default padding */
ul[class],
ol[class] {
  padding: 0;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul[class],
ol[class] {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  * {
    -webkit-animation-duration: 0.01ms !important;
            animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
            animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

html,
body {
  height: 100%;
}

body {
  font-family: "system";
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  background: #f2f2f2;
  color: #17191c;
  font-size: 18px;
}

img {
  width: 100%;
  height: auto;
}

h1 {
  font-size: 3em;
}

h1.dynamic-text {
  font-size: calc(1.5em + 2vw);
}

h2 {
  font-size: 2em;
}

h2.dynamic-text {
  font-size: calc(1.3em + 2vw);
}

h3 {
  font-size: 1.5em;
}

h3.dynamic-text {
  font-size: calc(1em + 2vw);
}

h4 {
  font-size: 1.1em;
}

h4.dynamic-text {
  font-size: calc(0.8em + 2vw);
}

.tns-outer {
  padding: 0 !important;
}

.tns-outer [hidden] {
  display: none !important;
}

.tns-outer [aria-controls], .tns-outer [data-action] {
  cursor: pointer;
}

.tns-slider {
  transition: all 0s;
}

.tns-slider > .tns-item {
  box-sizing: border-box;
}

.tns-horizontal.tns-subpixel {
  white-space: nowrap;
}

.tns-horizontal.tns-subpixel > .tns-item {
  display: inline-block;
  vertical-align: top;
  white-space: normal;
}

.tns-horizontal.tns-no-subpixel:after {
  content: '';
  display: table;
  clear: both;
}

.tns-horizontal.tns-no-subpixel > .tns-item {
  float: left;
}

.tns-horizontal.tns-carousel.tns-no-subpixel > .tns-item {
  margin-right: -100%;
}

.tns-no-calc {
  position: relative;
  left: 0;
}

.tns-gallery {
  position: relative;
  left: 0;
  min-height: 1px;
}

.tns-gallery > .tns-item {
  position: absolute;
  left: -100%;
  transition: transform 0s, opacity 0s;
}

.tns-gallery > .tns-slide-active {
  position: relative;
  left: auto !important;
}

.tns-gallery > .tns-moving {
  transition: all 0.25s;
}

.tns-autowidth {
  display: inline-block;
}

.tns-lazy-img {
  transition: opacity 0.6s;
  opacity: 0.6;
}

.tns-lazy-img.tns-complete {
  opacity: 1;
}

.tns-ah {
  transition: height 0s;
}

.tns-ovh {
  overflow: hidden;
}

.tns-visually-hidden {
  position: absolute;
  left: -10000em;
}

.tns-transparent {
  opacity: 0;
  visibility: hidden;
}

.tns-fadeIn {
  opacity: 1;
  filter: alpha(opacity=100);
  z-index: 0;
}

.tns-normal, .tns-fadeOut {
  opacity: 0;
  filter: alpha(opacity=0);
  z-index: -1;
}

.tns-vpfix {
  white-space: nowrap;
}

.tns-vpfix > div, .tns-vpfix > li {
  display: inline-block;
}

.tns-t-subp2 {
  margin: 0 auto;
  width: 310px;
  position: relative;
  height: 10px;
  overflow: hidden;
}

.tns-t-ct {
  width: 2333.33333%;
  width: calc(100% * 70 / 3);
  position: absolute;
  right: 0;
}

.tns-t-ct:after {
  content: '';
  display: table;
  clear: both;
}

.tns-t-ct > div {
  width: 1.42857%;
  width: calc(100% / 70);
  height: 10px;
  float: left;
}

.main {
  border: 1px solid red;
  height: 100vh;
  width: 100%;
  overflow-x: hidden;
}

.active-background {
  background: var(--color-background);
  -webkit-filter: brightness(65%);
          filter: brightness(65%);
}

.active-background .background-image {
  height: 50vh;
  width: 100%;
  background-image: var(--image-background);
  background-repeat: no-repeat;
  background-size: cover;
}

.active-background .fade {
  height: 50vh;
  background: linear-gradient(rgba(242, 242, 242, 0.5), var(--color-background));
}

.main-grid {
  position: relative;
  z-index: 2;
  height: 100%;
  display: grid;
  grid-template-areas: "header secondary" "viewer secondary" "main-links secondary";
  grid-template-rows: 4em 1fr 8em;
  grid-template-columns: 1fr 1fr;
  width: 200vw;
  transition: transform 250ms ease-out;
}

@media (min-width: 769px) {
  .main-grid {
    grid-template-areas: "header header" "sponsors sponsors" "viewer chat" "main-links chat";
    grid-template-rows: 4em 4em 1fr 8em;
    grid-template-columns: 1fr 18em 100vw;
  }
}

.main-grid > * {
  border: 1px solid blue;
}

.main-grid[data-active-view="chat"] {
  transform: translateX(-100vw);
}

.main-grid[data-active-view="chat"] .chat {
  opacity: 1;
}

.main-grid[data-active-view="sponsor"] {
  transform: translateX(-100vw);
}

.main-grid[data-active-view="sponsor"] .sponsor {
  opacity: 1;
}

@media (min-width: 769px) {
  .view-toggle {
    display: none;
  }
}

.view-secondary {
  transform: opacity 250ms ease-out;
  opacity: 0;
  grid-area: secondary;
}

@media (min-width: 769px) {
  .view-secondary {
    opacity: 1;
  }
}

.app-header {
  grid-area: header;
}

.viewer {
  grid-area: viewer;
}

.sponsor-ribbon {
  grid-area: sponsors;
}

.main-links {
  grid-area: main-links;
}

@media (min-width: 769px) {
  .chat {
    grid-area: chat;
  }
}

footer {
  padding: calc(2rem + 1em) 2rem;
  background: white;
}

footer .wrapper {
  max-width: 1140px;
  margin: 0 auto;
}

@media (min-width: 1025px) {
  footer .wrapper {
    display: grid;
    grid-template-columns: 1fr 3fr;
  }
}

footer .wrapper .logos {
  display: flex;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  position: relative;
  margin: 0 auto;
}

footer .wrapper .logos img {
  width: 130px;
  padding: 15px;
}

footer .wrapper .logos img:first-of-type {
  margin-right: 20px;
}

footer .wrapper .logos .divider {
  height: 60%;
  background: #0059a3;
  top: 50%;
  width: 1px;
  position: absolute;
  transform: translateY(-50%);
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
}

@media (min-width: 1025px) {
  footer .wrapper .copyrights {
    padding-left: 30px;
  }
}

footer .wrapper .copyrights p {
  color: #575354;
  font-weight: bold;
  text-transform: uppercase;
  font-size: 14px;
  margin-bottom: 5px;
}

.hero {
  background: #0059a3;
  color: #f2f2f2;
}

.photo-upload {
  background: #0059a3;
  color: #f2f2f2;
}

.schedule ol {
  padding: 1rem;
}

.schedule ol li {
  display: grid;
  grid-template-columns: 3fr 1fr;
  background: white;
  margin-bottom: 1rem;
  border: 2px solid #0059a3;
  position: relative;
}

.schedule ol li .teams {
  display: flex;
  align-items: center;
}

.schedule ol li .teams .game-number {
  position: absolute;
  top: 0;
  color: #a41d37;
  font-weight: bold;
}

.schedule ol li .teams .wrapper {
  height: -webkit-max-content;
  height: -moz-max-content;
  height: max-content;
  width: 100%;
}

.schedule ol li .teams .wrapper .team1, .schedule ol li .teams .wrapper .team2 {
  display: flex;
  align-items: center;
  text-transform: uppercase;
  font-weight: bold;
  color: #0059a3;
}

.schedule ol li .teams .wrapper .team1 img, .schedule ol li .teams .wrapper .team2 img {
  width: 30px;
}

.schedule ol li .date-and-time {
  border-left: 2px solid #0059a3;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
